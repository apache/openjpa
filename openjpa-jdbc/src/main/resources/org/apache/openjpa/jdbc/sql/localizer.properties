union-sql-placeholder: Aborting UNION: cannot select placeholder for \
	non-column select SQL.
union-number-ordering: Aborting UNION: different numbers of order-by criteria \
	in selects.
union-incompat-ordering: Aborting UNION: incompatible ordering columns/sql or \
	direction.
union-unaligned-ordering: Aborting UNION: your database does not support \
	ordering columns/sql that appear at different positions in the SELECTs \
	that make up the UNION.
union-element: Individual selects involved in a UNION do not support this \
	operation.
incompat-ordering: This query cannot be completed.  The SQL SELECTs needed \
	to complete the query have incompatible ordering.  Their results cannot \
	be merged.
unpadded-char-cols: You are using CHAR columns with a data source or driver \
	that doesn't implement OraclePreparedStatement.setFixedCHAR(). \
	Comparisons on unpadded string values may fail.
unconfigured-nchar-cols: You are using NCHAR or NCLOB columns with a \
	data source or driver \
	that doesn't implement OraclePreparedStatement.setFormOfUse(). \
	Storing unicode values may fail or be corrupted.
diff-values: Attempt to set column "{0}" to two different values: \
	({1})"{2}", ({3})"{4}" \
	This can occur when you fail to set both sides of a two-sided relation \
	between objects, or when you map different fields to the same column, but \
	you do not keep the values of these fields in synch.
feature-not-supported: The database dictionary in use ("{0}") reports that it \
	does not have feature "{1}".  This feature is needed to complete the \
	current operation.  To force OpenJPA to try to use the feature anyway, set \
	the following property:\n\
	org.apache.openjpa.jdbc.DBDictionary: {1}=<value>
cant-outer-fk: Could not outer join the given foreign key "{0}" due to syntax \
	and foreign key limitations.  The join was converted to an inner join.
no-auto-assign: This database dictionary does not support auto-assigned column \
	values.
bad-join: The following error was detected when creating a foreign key: \
	"{0}".  The foreign key is being ignored.
sybase-compliance: They Sybase connection URL "{0}" may be invalid: \
	it does not contain the parameter "BE_AS_JDBC_COMPLIANT_AS_POSSIBLE=true", \
	which is required for the Sybase JConnect driver to behave in a \
	JDBC-compliant way.
sqlserver-cachedstmnts: The Microsoft JDBC driver has bugs that manifest \
	themselves when prepared statements are pooled.  Please disable prepared \
	statement pooling when using the Microsoft JDBC driver by including \
	"MaxCachedStatements=0" in your org.apache.openjpa.ConnectionFactoryProperties \
	configuration property.
sqlserver-netdirect-batch: The JNetDirect JDBC driver has problems when using \
	batch statements. Please disable prepared \
	statement pooling when using the this JDBC driver by including \
	"BatchLimit=0" in your org.apache.openjpa.jdbc.DBDictionary \
	configuration property.
sqlserver-cursor: The SQLServer connection URL "{0}" may be invalid: \
	it does not contain the parameter "SelectMethod=cursor", which is \
	necessary for the driver to properly support large result sets.
oracle-syntax: Oracle 8 does not support SQL92 syntax.  You can avoid \
	this message by setting the "JoinSyntax" DBDictionary property \
	to "database".\
	For example:\n\
	org.apache.openjpa.jdbc.DBDictionary: oracle(JoinSyntax=database)
oracle-batch-lob: LOB operations not allowed for batched statement: {0}
oracle-batch-bug: The Oracle 9.2 JDBC driver has problems with \
	batch statements and has been disabled by default.  You can \
	enable batched statements by setting the "BatchLimit" DBDictionary \
	property.  You may be able to bypass this problem by disabling \
	prepared statement pooling. The compatible 9.0.1 driver does not \
	have this behavior.
oracle-batch-override: The BatchLimit property was set even though \
	the Oracle 9.2 driver may not support this behavior correctly. \
	If you see a number of invalid update count errors, you should \
	disable statement batching by setting the BatchLimit property to 0.
oracle-connecting-for-driver: OpenJPA is now connecting to the database in order \
	to figure out what JDBC driver you are using, as OpenJPA must alter its \
	behavior for this database depending on the driver vendor.  To avoid this \
	connection, set the DriverVendor value in your org.apache.openjpa.jdbc.DBDictionary \
	configuration property to one of the following values:\n\
	oracle, oracle92 (for the 9.2 driver), datadirect, datadirect61 \
	(for driver versions <= 3.1), other \n\
	For example:\n\
	org.apache.openjpa.jdbc.DBDictionary: oracle(DriverVendor=oracle92)
oracle-constant: Cannot outer join tables "{0}" and "{1}" using native \
	join syntax and constant joins.  If you are using Oracle 9 or higher, \
	you should instead use SQL92 joins by specifying the JoinSyntax \
	value in the org.apache.openjpa.jdbc.DBDictionary configuration property:\n\
	org.apache.openjpa.jdbc.DBDictionary: oracle(JoinSyntax=sql92).
oracle-savepoint: An error occurred when attempting to set an Oracle \
	savepoint "{0}".  You must use Oracle driver and database 9.2 or higher.
oracle-rollback: An error occurred when attempting to rollback to an Oracle \
	savepoint "{0}".  You must use Oracle driver and database 9.2 or higher.
oracle-unknown-svpt: Could not find an OracleConnection instance from this \
	connection class "{0}".
db2-cant-lock: DB2 cannot perform FOR UPDATE selects on multiple tables. \
	The tables used in this select are: "{0}".  You should either configure \
	your application to avoid multi-table selects, use optimistic locking, \
	or set the "SimulateLocking" DBDictionary property to allow non-locking \
	selects within pessimistic transactions. 
informix-cant-lock: Informix cannot perform FOR UPDATE selects on multiple \
	tables, or when it is a SELECT DISTINCT.  The tables used in this select \
	are: "{0}".  You should either configure your application to avoid \
	multi-table/distinct selects, use optimistic locking, or set the \
	"SimulateLocking" DBDictionary property to allow non-locking selects \
	within pessimistic transactions. 
bad-param: The specified parameter of type "{0}" is not a valid query parameter.
warn-generic: Your database configuration was not recognized as a supported \
	OpenJPA database. The generic dictionary will be used, which may result in \
	limited functionality. This behavior can be overridden by specifying the \
	appropriate dictionary class in the "org.apache.openjpa.jdbc.DBDictionary" \
	property of the OpenJPA configuration.
using-dict: Using dictionary class "{0}"{1}.
no-pessimistic: This dictionary ({0}) does not support locking, so \
	operations may not be performed using a Broker that does not have \
	optimistic locking enabled.
no-fk-table: Foreign key "{0}" on table "{1}" references a table \
	("{2}") that was not found.
dd-lock-bug: This version of the DataDirect JDBC driver has a bug that \
	prevents SELECT FOR UPDATE statements from working.  Please \
	use version 3.2 or higher of the driver.	
storage-restriction: The database "{0}" has restrictions that prevent it \
	from being able to store the value "{1}" of type "{2}". The value \
	will be rounded to "{3}" for storage.
dict-not-supported: This database dictionary "{0}" is not officially supported \
	by BEA.
invalid-autoassign: This database dictionary "{0}" does not support \
	auto-assigned column values.  The column "{1}" may not behave as desired.
psql-no-set-fetch-size:	This version of the PostgreSQL JDBC driver does not \
	support the Statement.setFetchSize() method. OpenJPA will no longer attempt \
	to set the statement fetch size. To suppress this warning, ensure that \
	the org.apache.openjpa.FetchBatchSize configuration property is set to zero. The \
	original PostgreSQL driver exception is being logged for your reference.
no-genkey: The last generated key query did not return any results.
invalid-genkey: The column "{0}" was marked as being auto-assigned, but \
	the server reported that the assigned value was null.
indexof-not-supported: The database "{0}" does not support the \
	indexOf function.
substring-not-supported: The database "{0}" does not support the \
	substring function.
null-result-provider: supplied array of result object providers is null
empty-result-provider: supplied array of result object providers is empty
null-shared-result-set: supplied result set is null  
illegal-method: {0}.{1}() is illegal to be invoked 
column-not-mapped: SQLResultSetMapping "{0}" does not map the columns "{1}" \
	that are selected by the SQL query\r\n "{2}"
batch-license: Your license does not have SQL batching capabilities.
dictionary-configuration: DBDictionary configuration: \n{0}
