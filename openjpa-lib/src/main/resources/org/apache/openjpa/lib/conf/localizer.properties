get-prop-errs: There were errors initializing your configuration: {0}
read-only: The configuration is read only; it cannot be modified.
obj-create: An instance of the class "{0}" could not be instantiated.  Make \
	sure the class has a public no-args constructor.
prop-parse: There was an error parsing the properties string "{0}".  Please \
	check that the format is: "<name1>=<value1> <name2>=<value2> ...".
naming-err:	There was an error duing JNDI lookup of the name "{0}".
invalid-config-params: There was an error while setting up the configuration \
	plugin option "{0}". The plugin was of type "{1}". Setter methods for the \
	following plugin properties were not available in that type: {2}. \
	Possible plugin properties are: {3}.\n\
	Ensure that your plugin configuration string uses key values that \
	correspond to setter methods in the plugin class.
invalid-config-param-hint: There was an error while setting up the \
	configuration plugin option "{0}". The plugin was of type "{1}". \
	The plugin property "{2}" had no corresponding setter method or accessible \
	field. The plugin property closely matches "{3}"; perhaps the property \
	was misspelled. Ensure that your plugin configuration string uses key \
	values that correspond to setter methods in the plugin class. All \
	possible plugin properties are: {4}.
invalid-enumerated-config: There was an error while setting up the \
	configuration option "{0}", and it was set to "{1}". All \
	possible values for this setting are: {2}.
invalid-property-descriptors: Errors occurred while creating property \
	descriptors for the following properties: {0}.
invalid-property: The property named "{0}" was not recognized and will \
	be ignored.
invalid-property-hint: The property named "{0}" was not recognized and will \
	be ignored, although the name closely matches a valid property called "{1}".
invalid-plugin: Instantiation of plugin "{0}" with value "{1}" caused an \
	error "{2}". The alias or class name may have been misspelled, or the \
	class may not be available in the class path.
invalid-plugin-aliases: Instantiation of plugin "{0}" with value "{1}" caused \
	an error "{2}". The alias or class name may have been misspelled, or the \
	class may not have be available in the class path. Valid aliases for this \
	plugin are: {3}
invalid-plugin-aliases-hint: Instantiation of plugin "{0}" with value "{1}" \
	caused an error "{2}". The alias or class name may have been misspelled \
	(as it closely matches the valid plugin alias "{4}"), or the class may \
	not be available in the class path.  Valid aliases for this plugin are: {3}
not-singleton: You cannot set the value of property "{0}" as an object.  The \
	property cannot use a single value; it must be recreated on each request.
cant-set-string: Configuration property "{0}" cannot be set from a string. \
	You must supply the object value.
loaded-via-provider: Configuration information loaded via "{0}".
no-default-providers: Default configuration information couldn''t be loaded \
	from any configuration provider.
no-provider: No registered configuration provider could load "{0}".
no-providers: Your system is missing configuration providers. \
    Configuration providers load configuration information for supported \
    specifications.  You must have a META-INF/services/{0} file in your \
    classpath listing the available provider classes, and some listed class \
    must be instantiable.  Typically this file is bundled as part of the \
    distribution.  Have you unbundled it, or unbundled its listed classes?
dup-with-different-prefixes: Found multiple properties with different valid \
	prefixes. Properties: {0}, {1}.
plugin-creation-exception: An exception occurred while creating a plugin for \
    value {0}. This exception will be consumed.
anchor-only: You cannot supply a configuration unit name only.  You must also \
    supply the name of the resource in which the unit appears.
no-product-derivations: Your system is missing product derivations.  Product \
    derivations provide configuration options for supported data stores and \
    specifications.  You must have a META-INF/services/{0} file in your \
    classpath listing the available derivation classes, and some listed class \
    must be instantiable.  Typically this file is bundled as part of the \
    distribution.  Have you unbundled it, or unbundled its listed classes? \
    If you are using ant, a common solution to this problem is to place \
    the jar libraries of the OpenJPA distribution in the \
    $'{user.home}/.ant/lib directory. Another common cause of this problem \
    is an overly-restrictive security manager.\n{1}
bad-product-derivations: Some product derivations are being skipped. For \
    information about product derivation status, run:\njava {0}

Log-name: Log factory
Log-desc: LogFactory and configuration
Log-type: General
Log-interface: org.apache.openjpa.lib.log.LogFactory
